<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不做咸鱼的小明</title>
  
  <subtitle>不做咸鱼的小明</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tuliang.org/"/>
  <updated>2018-11-09T17:45:21.883Z</updated>
  <id>https://tuliang.org/</id>
  
  <author>
    <name>涂亮</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Effective Ruby 改善Ruby程序的48条建议</title>
    <link href="https://tuliang.org/effective-ruby-gai-shan-ruby-cheng-xu-de-48-tiao-jian-yi/"/>
    <id>https://tuliang.org/effective-ruby-gai-shan-ruby-cheng-xu-de-48-tiao-jian-yi/</id>
    <published>2018-11-07T09:08:35.000Z</published>
    <updated>2018-11-09T17:45:21.883Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;Effective-Ruby-改善Ruby程序的48条建议&quot;&gt;&lt;a href=&quot;#Effective-Ruby-改善Ruby程序的48条建议&quot; class=&quot;headerlink&quot; title=&quot;Effective Ruby
        
      
    
    </summary>
    
      <category term="阅读" scheme="https://tuliang.org/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="Ruby" scheme="https://tuliang.org/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>容器基础-隔离和限制</title>
    <link href="https://tuliang.org/rong-qi-ji-chu-ge-chi-he-xian-zhi/"/>
    <id>https://tuliang.org/rong-qi-ji-chu-ge-chi-he-xian-zhi/</id>
    <published>2018-11-05T08:48:48.000Z</published>
    <updated>2018-11-09T04:44:09.617Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;容器技术的核心功能，就是通过修改和约束进程的动态表现，从而为其创造出一个“空间”。&lt;/p&gt;
&lt;p&gt;对于 &lt;code&gt;Docker&lt;/code&gt; 等大多数 &lt;code&gt;Linux&lt;/code&gt; 容器来说，&lt;code&gt;Namespace&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="工具" scheme="https://tuliang.org/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Docker" scheme="https://tuliang.org/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>如何高效学习</title>
    <link href="https://tuliang.org/ru-he-gao-xiao-xue-xi/"/>
    <id>https://tuliang.org/ru-he-gao-xiao-xue-xi/</id>
    <published>2018-11-05T04:26:33.000Z</published>
    <updated>2018-11-05T04:28:31.759Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;整体性学习策略强调将信息编织到知识网络中，而不是给自己加上机械记忆的负担，这个策略的基础有以下几方面。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;结构 —— 关于某个学科的知识之间联系的总和，它是你大脑中的城市。&lt;/li&gt;
&lt;li&gt;模型 ——
        
      
    
    </summary>
    
      <category term="阅读" scheme="https://tuliang.org/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="方法论" scheme="https://tuliang.org/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
      <category term="思维" scheme="https://tuliang.org/tags/%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Docker 中 NGINX 挂载应用的静态文件</title>
    <link href="https://tuliang.org/docker-zhong-nginx-gua-zai-ying-yong-de-jing-tai-wen-jian/"/>
    <id>https://tuliang.org/docker-zhong-nginx-gua-zai-ying-yong-de-jing-tai-wen-jian/</id>
    <published>2018-10-31T18:10:13.000Z</published>
    <updated>2018-11-09T04:44:02.650Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在 &lt;code&gt;Docker&lt;/code&gt; 中 &lt;code&gt;NGINX&lt;/code&gt; 如何获得应用的静态文件呢？&lt;/p&gt;
&lt;p&gt;一般来说这种共享文件的需求，我们需要使用 &lt;code&gt;volumes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;假如静态文件的地址是
        
      
    
    </summary>
    
      <category term="工具" scheme="https://tuliang.org/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Docker" scheme="https://tuliang.org/tags/Docker/"/>
    
      <category term="Docker Compose" scheme="https://tuliang.org/tags/Docker-Compose/"/>
    
      <category term="NGINX" scheme="https://tuliang.org/tags/NGINX/"/>
    
  </entry>
  
  <entry>
    <title>大型网站系统与 Java 中间件开发实践</title>
    <link href="https://tuliang.org/da-xing-wang-zhan-xi-tong-yu-java-zhong-jian-jian-kai-fa-shi-jian/"/>
    <id>https://tuliang.org/da-xing-wang-zhan-xi-tong-yu-java-zhong-jian-jian-kai-fa-shi-jian/</id>
    <published>2015-04-17T13:05:48.000Z</published>
    <updated>2018-11-05T13:13:30.579Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;阿姆达尔定律（Amdahl’s law）告诉我们，程序中可并行代码的比例决定你增加处理器所能带来的速度提升上限，是否能达到这个上限，还取决于很多其他因素。&lt;/p&gt;
&lt;p&gt;例如，当 P=0.5 时，我们可以计算出速度提升的上限就是 2。而如果
        
      
    
    </summary>
    
      <category term="阅读" scheme="https://tuliang.org/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="Java" scheme="https://tuliang.org/tags/Java/"/>
    
      <category term="架构" scheme="https://tuliang.org/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="分布式" scheme="https://tuliang.org/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Ruby thread pool</title>
    <link href="https://tuliang.org/ruby-thread-pool/"/>
    <id>https://tuliang.org/ruby-thread-pool/</id>
    <published>2015-04-10T08:54:08.000Z</published>
    <updated>2018-10-31T14:38:42.677Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;有时候会遇到一个情况需要在多个远程服务获取数据。&lt;/p&gt;
&lt;p&gt;例如服务 &lt;code&gt;a&lt;/code&gt; 需要 &lt;code&gt;2&lt;/code&gt; 秒，服务 &lt;code&gt;b&lt;/code&gt; 需要 &lt;code&gt;5&lt;/code&gt; 秒，按照正常处理总共就需要
        
      
    
    </summary>
    
      <category term="后端" scheme="https://tuliang.org/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Ruby" scheme="https://tuliang.org/tags/Ruby/"/>
    
      <category term="并发编程" scheme="https://tuliang.org/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Ruby synchronized</title>
    <link href="https://tuliang.org/ruby-synchronized/"/>
    <id>https://tuliang.org/ruby-synchronized/</id>
    <published>2015-04-09T08:31:48.000Z</published>
    <updated>2018-10-31T14:24:45.149Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近学习 &lt;code&gt;Java&lt;/code&gt; 的时候了解到在 &lt;code&gt;Java&lt;/code&gt; 中 &lt;code&gt;synchronized&lt;/code&gt; 关键字可以保证代码块的串行执行。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;ruby&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="后端" scheme="https://tuliang.org/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Ruby" scheme="https://tuliang.org/tags/Ruby/"/>
    
      <category term="并发编程" scheme="https://tuliang.org/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Rails Singular Resources</title>
    <link href="https://tuliang.org/rails-singular-resources/"/>
    <id>https://tuliang.org/rails-singular-resources/</id>
    <published>2014-10-24T15:25:53.000Z</published>
    <updated>2018-11-02T13:35:40.361Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;code&gt;Rails&lt;/code&gt; 中 &lt;code&gt;Controller&lt;/code&gt; 如果不是复数，写 &lt;code&gt;path&lt;/code&gt; 或 &lt;code&gt;url&lt;/code&gt; 的时候就必须加上 &lt;code&gt;index&lt;/code&gt;，这样看上去就很
        
      
    
    </summary>
    
      <category term="后端" scheme="https://tuliang.org/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Rails" scheme="https://tuliang.org/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>网页渲染数学公式</title>
    <link href="https://tuliang.org/wang-ye-xuan-ran-shu-xue-gong-shi/"/>
    <id>https://tuliang.org/wang-ye-xuan-ran-shu-xue-gong-shi/</id>
    <published>2014-10-01T13:14:41.000Z</published>
    <updated>2018-11-05T13:23:39.993Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;数学公式一般使用 LaTeX，但是在网页上一般将 LaTeX 渲染成为图片。&lt;/p&gt;
&lt;p&gt;在一堆文字中放进几个图片难看又麻烦，稍微找了一下发现一个神器: &lt;a href=&quot;http://www.mathjax.org/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="工具" scheme="https://tuliang.org/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="MathJax" scheme="https://tuliang.org/tags/MathJax/"/>
    
  </entry>
  
  <entry>
    <title>面向对象设计实践指南-Ruby语言描述</title>
    <link href="https://tuliang.org/mian-xiang-dui-xiang-she-ji-shi-jian-zhi-nan-ruby-yu-yan-miao-shu/"/>
    <id>https://tuliang.org/mian-xiang-dui-xiang-she-ji-shi-jian-zhi-nan-ruby-yu-yan-miao-shu/</id>
    <published>2014-09-03T13:25:07.000Z</published>
    <updated>2018-11-05T13:26:37.766Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;设计是保留可变性的艺术，而非达到完美性的行为。&lt;/p&gt;
&lt;p&gt;编写出的代码应该具有如下几个特点:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;透明性（Transportation）: 在所更改的代码，以及在远处依赖于它的代码里，更改所产生的后果应该显而易见。 
        
      
    
    </summary>
    
      <category term="阅读" scheme="https://tuliang.org/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="Ruby" scheme="https://tuliang.org/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>Web 文件下载和查看</title>
    <link href="https://tuliang.org/web-wen-jian-xia-zai-he-cha-kan/"/>
    <id>https://tuliang.org/web-wen-jian-xia-zai-he-cha-kan/</id>
    <published>2014-06-11T10:48:43.000Z</published>
    <updated>2018-11-09T17:34:36.930Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;Web-文件下载和查看&quot;&gt;&lt;a href=&quot;#Web-文件下载和查看&quot; class=&quot;headerlink&quot; title=&quot;Web 文件下载和查看&quot;&gt;&lt;/a&gt;Web
        
      
    
    </summary>
    
      <category term="网络" scheme="https://tuliang.org/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Ruby" scheme="https://tuliang.org/tags/Ruby/"/>
    
      <category term="HTTP" scheme="https://tuliang.org/tags/HTTP/"/>
    
      <category term="HTML5" scheme="https://tuliang.org/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>Mac 更新 Emacs</title>
    <link href="https://tuliang.org/mac-geng-xin-emacs/"/>
    <id>https://tuliang.org/mac-geng-xin-emacs/</id>
    <published>2014-03-17T13:55:11.000Z</published>
    <updated>2018-11-02T14:02:06.673Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近买了 &lt;code&gt;hhkb&lt;/code&gt; 开始折腾 &lt;code&gt;Emacs&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Mac&lt;/code&gt; 自带 &lt;code&gt;Emacs&lt;/code&gt;，但是版本比较老是
        
      
    
    </summary>
    
      <category term="工具" scheme="https://tuliang.org/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Emacs" scheme="https://tuliang.org/tags/Emacs/"/>
    
  </entry>
  
  <entry>
    <title>CSS3 圆角无效</title>
    <link href="https://tuliang.org/css3-yuan-jiao-wu-xiao/"/>
    <id>https://tuliang.org/css3-yuan-jiao-wu-xiao/</id>
    <published>2013-11-07T13:34:45.000Z</published>
    <updated>2018-11-02T13:47:36.138Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;今天在做页面的时候遇到 &lt;code&gt;CSS3&lt;/code&gt; 圆角无效的情况，实例代码: &lt;/p&gt;
&lt;pre class=&quot; language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span
        
      
    
    </summary>
    
      <category term="前端" scheme="https://tuliang.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="CSS3" scheme="https://tuliang.org/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>Siege</title>
    <link href="https://tuliang.org/siege/"/>
    <id>https://tuliang.org/siege/</id>
    <published>2013-08-27T15:03:04.000Z</published>
    <updated>2018-10-31T15:07:42.095Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;code&gt;siege&lt;/code&gt; 围攻是一个压力测试和评测工具，设计用于 &lt;code&gt;web&lt;/code&gt; 开发这评估应用在压力下的承受能力。&lt;/p&gt;
&lt;p&gt;可以模拟对一个 &lt;code&gt;web&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="工具" scheme="https://tuliang.org/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Siege" scheme="https://tuliang.org/tags/Siege/"/>
    
  </entry>
  
  <entry>
    <title>Git 彻底删除文件</title>
    <link href="https://tuliang.org/git-che-di-shan-chu-wen-jian/"/>
    <id>https://tuliang.org/git-che-di-shan-chu-wen-jian/</id>
    <published>2013-08-13T14:58:34.000Z</published>
    <updated>2018-10-31T15:01:11.685Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;一般 &lt;code&gt;git&lt;/code&gt; 删除文件使用 &lt;code&gt;git rm&lt;/code&gt; 就可以了，但是有时候某些文件你甚至不想让它出现在 &lt;code&gt;git&lt;/code&gt; 的 &lt;code&gt;log&lt;/code&gt;中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;github&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="工具" scheme="https://tuliang.org/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Git" scheme="https://tuliang.org/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>PHP 神奇的分号</title>
    <link href="https://tuliang.org/php-shen-qi-de-fen-hao/"/>
    <id>https://tuliang.org/php-shen-qi-de-fen-hao/</id>
    <published>2013-03-01T14:52:35.000Z</published>
    <updated>2018-10-31T14:57:14.566Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;今天在开发过程中，遇到两种分号的神奇问题，特此记录。&lt;/p&gt;
&lt;pre class=&quot; language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token delimiter&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span
        
      
    
    </summary>
    
      <category term="后端" scheme="https://tuliang.org/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="PHP" scheme="https://tuliang.org/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>斯坦福-iPad 和 iPhone 应用开发(iOS5)</title>
    <link href="https://tuliang.org/si-tan-fu-ipad-he-iphone-ying-yong-kai-fa-ios5/"/>
    <id>https://tuliang.org/si-tan-fu-ipad-he-iphone-ying-yong-kai-fa-ios5/</id>
    <published>2013-01-21T14:03:21.000Z</published>
    <updated>2018-11-02T14:14:33.263Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;师介绍&lt;/p&gt;
&lt;p&gt;讲师: Paul Hegarty&lt;/p&gt;
&lt;p&gt;介绍: 斯坦福大学软件工程学教授，主要教授iOS应用的开发、编程。&lt;/p&gt;
&lt;p&gt;课程介绍&lt;/p&gt;
&lt;p&gt;最新更新课程，适用于 &lt;code&gt;iOS 5&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;本课程介绍了使用
        
      
    
    </summary>
    
      <category term="公开课" scheme="https://tuliang.org/categories/%E5%85%AC%E5%BC%80%E8%AF%BE/"/>
    
    
      <category term="Objective-C" scheme="https://tuliang.org/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>解决 JavaScript 指向不明</title>
    <link href="https://tuliang.org/jie-jue-javascript-zhi-xiang-bu-ming/"/>
    <id>https://tuliang.org/jie-jue-javascript-zhi-xiang-bu-ming/</id>
    <published>2012-12-23T14:33:02.000Z</published>
    <updated>2018-10-31T14:35:50.759Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;用面向对象的方式编写 &lt;code&gt;JavaScript&lt;/code&gt; 时，在类中经常会出现 &lt;code&gt;this&lt;/code&gt; 指向不明的问题。&lt;/p&gt;
&lt;p&gt;解决这个问题很简单，在对象中将 &lt;code&gt;this&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="前端" scheme="https://tuliang.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JavaScript" scheme="https://tuliang.org/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Git 忽略文件</title>
    <link href="https://tuliang.org/git-hu-lue-wen-jian/"/>
    <id>https://tuliang.org/git-hu-lue-wen-jian/</id>
    <published>2012-12-23T09:27:55.000Z</published>
    <updated>2018-10-31T14:36:46.212Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;使用 &lt;code&gt;git&lt;/code&gt; 时，经常需要忽略一些文件，比如一些 &lt;code&gt;IDE&lt;/code&gt; 生成的配置文件。&lt;/p&gt;
&lt;p&gt;在项目目录加上 &lt;code&gt;.gitignore&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="工具" scheme="https://tuliang.org/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Git" scheme="https://tuliang.org/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 变量声明提前</title>
    <link href="https://tuliang.org/javascript-bian-liang-sheng-ming-ti-qian/"/>
    <id>https://tuliang.org/javascript-bian-liang-sheng-ming-ti-qian/</id>
    <published>2012-10-17T09:12:48.000Z</published>
    <updated>2018-10-31T14:41:00.705Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;code&gt;JavaScript&lt;/code&gt; 使用了函数作用域，变量在声明它们的函数体以及这个函数体嵌套的任意函数体内都是有定义的。&lt;/p&gt;
&lt;p&gt;到底是什么意思呢？我们来看下面这段代码&lt;/p&gt;
&lt;pre class=&quot;
        
      
    
    </summary>
    
      <category term="前端" scheme="https://tuliang.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JavaScript" scheme="https://tuliang.org/tags/JavaScript/"/>
    
  </entry>
  
</feed>
